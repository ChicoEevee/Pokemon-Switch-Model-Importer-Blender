# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Gfbmdl

import flatbuffers

class BoundingBox(object):
    __slots__ = ['_tab']

    # BoundingBox
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BoundingBox
    def MinX(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # BoundingBox
    def MinY(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # BoundingBox
    def MinZ(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # BoundingBox
    def MaxX(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # BoundingBox
    def MaxY(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # BoundingBox
    def MaxZ(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(20))

def CreateBoundingBox(builder, MinX, MinY, MinZ, MaxX, MaxY, MaxZ):
    builder.Prep(4, 24)
    builder.PrependFloat32(MaxZ)
    builder.PrependFloat32(MaxY)
    builder.PrependFloat32(MaxX)
    builder.PrependFloat32(MinZ)
    builder.PrependFloat32(MinY)
    builder.PrependFloat32(MinX)
    return builder.Offset()
