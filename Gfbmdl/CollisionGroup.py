# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Gfbmdl

import flatbuffers

class CollisionGroup(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCollisionGroup(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CollisionGroup()
        x.Init(buf, n + offset)
        return x

    # CollisionGroup
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CollisionGroup
    def BoneIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # CollisionGroup
    def Unknown1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # CollisionGroup
    def BoneChildren(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # CollisionGroup
    def BoneChildrenAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # CollisionGroup
    def BoneChildrenLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CollisionGroup
    def Bounding(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = o + self._tab.Pos
            from .BoundingBox import BoundingBox
            obj = BoundingBox()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def CollisionGroupStart(builder): builder.StartObject(4)
def CollisionGroupAddBoneIndex(builder, BoneIndex): builder.PrependUint32Slot(0, BoneIndex, 0)
def CollisionGroupAddUnknown1(builder, Unknown1): builder.PrependUint32Slot(1, Unknown1, 0)
def CollisionGroupAddBoneChildren(builder, BoneChildren): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(BoneChildren), 0)
def CollisionGroupStartBoneChildrenVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def CollisionGroupAddBounding(builder, Bounding): builder.PrependStructSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(Bounding), 0)
def CollisionGroupEnd(builder): return builder.EndObject()
