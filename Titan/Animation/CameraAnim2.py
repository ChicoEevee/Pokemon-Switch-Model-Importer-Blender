# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Animation

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CameraAnim2(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CameraAnim2()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCameraAnim2(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CameraAnim2
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CameraAnim2
    def RotationType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # CameraAnim2
    def Rotation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # CameraAnim2
    def TranslationType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # CameraAnim2
    def Translation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # CameraAnim2
    def Unk2Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # CameraAnim2
    def Unk2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # CameraAnim2
    def Unk3Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # CameraAnim2
    def Unk3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # CameraAnim2
    def Unk4Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # CameraAnim2
    def Unk4(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def CameraAnim2Start(builder):
    builder.StartObject(10)

def Start(builder):
    CameraAnim2Start(builder)

def CameraAnim2AddRotationType(builder, rotationType):
    builder.PrependUint8Slot(0, rotationType, 0)

def AddRotationType(builder, rotationType):
    CameraAnim2AddRotationType(builder, rotationType)

def CameraAnim2AddRotation(builder, rotation):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(rotation), 0)

def AddRotation(builder, rotation):
    CameraAnim2AddRotation(builder, rotation)

def CameraAnim2AddTranslationType(builder, translationType):
    builder.PrependUint8Slot(2, translationType, 0)

def AddTranslationType(builder, translationType):
    CameraAnim2AddTranslationType(builder, translationType)

def CameraAnim2AddTranslation(builder, translation):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(translation), 0)

def AddTranslation(builder, translation):
    CameraAnim2AddTranslation(builder, translation)

def CameraAnim2AddUnk2Type(builder, unk2Type):
    builder.PrependUint8Slot(4, unk2Type, 0)

def AddUnk2Type(builder, unk2Type):
    CameraAnim2AddUnk2Type(builder, unk2Type)

def CameraAnim2AddUnk2(builder, unk2):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(unk2), 0)

def AddUnk2(builder, unk2):
    CameraAnim2AddUnk2(builder, unk2)

def CameraAnim2AddUnk3Type(builder, unk3Type):
    builder.PrependUint8Slot(6, unk3Type, 0)

def AddUnk3Type(builder, unk3Type):
    CameraAnim2AddUnk3Type(builder, unk3Type)

def CameraAnim2AddUnk3(builder, unk3):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(unk3), 0)

def AddUnk3(builder, unk3):
    CameraAnim2AddUnk3(builder, unk3)

def CameraAnim2AddUnk4Type(builder, unk4Type):
    builder.PrependUint8Slot(8, unk4Type, 0)

def AddUnk4Type(builder, unk4Type):
    CameraAnim2AddUnk4Type(builder, unk4Type)

def CameraAnim2AddUnk4(builder, unk4):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(unk4), 0)

def AddUnk4(builder, unk4):
    CameraAnim2AddUnk4(builder, unk4)

def CameraAnim2End(builder):
    return builder.EndObject()

def End(builder):
    return CameraAnim2End(builder)
