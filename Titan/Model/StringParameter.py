# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Model

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StringParameter(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StringParameter()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStringParameter(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StringParameter
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StringParameter
    def StringName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StringParameter
    def StringValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def StringParameterStart(builder):
    builder.StartObject(2)

def Start(builder):
    StringParameterStart(builder)

def StringParameterAddStringName(builder, stringName):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(stringName), 0)

def AddStringName(builder, stringName):
    StringParameterAddStringName(builder, stringName)

def StringParameterAddStringValue(builder, stringValue):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(stringValue), 0)

def AddStringValue(builder, stringValue):
    StringParameterAddStringValue(builder, stringValue)

def StringParameterEnd(builder):
    return builder.EndObject()

def End(builder):
    return StringParameterEnd(builder)
